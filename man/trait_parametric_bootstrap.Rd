% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap_traits_parametric.R
\name{trait_parametric_bootstrap}
\alias{trait_parametric_bootstrap}
\title{Bootstrap traits parametrically}
\usage{
trait_parametric_bootstrap(
  fitted_distributions,
  nrep = 100,
  sample_size = 200,
  raw = FALSE
)
}
\arguments{
\item{fitted_distributions}{Fitted distribution object returned by trait_fit_distributions}

\item{nrep}{number of bootstrap replicates}

\item{sample_size}{bootstrap size}

\item{raw}{logical; argument to extract the raw data of the trait distributions.
The default is raw = FALSE. If raw = TRUE, nrep is restricted to 1 to avoid 
memory issues.}
}
\value{
a tibble
}
\description{
Function for parametric bootstrap resampling to calculate
community weighted trait mean and higher moments.


}
\details{
The trait_parametric_bootstrap function is a parametric analog of the
trait_np_bootstrap function. It randomly samples from among the fitted distributions
proportionally to species abundance. The number of samples per replicated are drawn 
specified with the parameter sample_size, and the number of replicated is specified 
by the parameter nrep. From these distributions the function estimates the mean 
and the higher moments including variance, skewness and kurtosis.

The output of trait_parametric_bootstrap can be summarized using
trait_summarize_boot_moments.
}
\examples{
data(community)
data(trait)
selected_traits <-trait_select(comm = community, traits = trait,
                 scale_hierarchy = c("Site", "PlotID"),
                 taxon_col = "Taxon", value_col = "Value",
                 trait_col = "Trait", abundance_col = "Cover")
fitted_distributions <- trait_fit_distributions(
                        selected_traits = selected_traits,
                        distribution_type = "normal")
parametric_distributions <- trait_parametric_bootstrap(
                            fitted_distributions = fitted_distributions,
                            nrep = 10, sample_size = 100)
moment_summary <- trait_summarise_boot_moments(
                  bootstrap_moments = parametric_distributions,
                  parametric = FALSE)
}
